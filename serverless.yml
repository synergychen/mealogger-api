service: mealogger-api
custom:
  secrets: ${file(secrets.json)}
provider:
  name: aws
  runtime: nodejs12.x
  region: us-east-1
  httpApi:
    cors: true
  environment:
    DB_NAME: ${self:custom.secrets.DB_NAME}
    DB_USERNAME: ${self:custom.secrets.DB_USERNAME}
    DB_PASSWORD: ${self:custom.secrets.DB_PASSWORD}
    DB_HOST: ${self:custom.secrets.DB_HOST}
    DB_PORT: ${self:custom.secrets.DB_PORT}
functions:
  # Meal Plan
  getRecentMealPlans:
    handler: handler.getRecentMealPlans
    name: ${self:service}-getRecentMealPlans
    events:
      - http:
          path: meal_plans/recent
          method: get
          cors: true
  getMealPlansHistory:
    handler: handler.getMealPlansHistory
    name: ${self:service}-getMealPlansHistory
    events:
      - http:
          path: meal_plans/history
          method: get
          cors: true
  # Dish Plan
  createDishPlan:
    handler: handler.createDishPlan
    name: ${self:service}-createDishPlan
    events:
      - http:
          path: dish_plans
          method: post
          cors: true
  deleteDishPlan:
    handler: handler.deleteDishPlan
    name: ${self:service}-deleteDishPlan
    events:
      - http:
          path: dish_plans/{id}
          method: delete
          cors: true
  # Dish
  getDishes:
    handler: handler.getDishes
    name: ${self:service}-getDishes
    events:
      - http:
          path: dishes
          method: get
          cors: true
  createDish:
    handler: handler.createDish
    name: ${self:service}-createDish
    events:
      - http:
          path: dishes
          method: post
          cors: true
  # Food
  getFoods:
    handler: handler.getFoods
    name: ${self:service}-getFoods
    events:
      - http:
          path: foods
          method: get
          cors: true
  createFood:
    handler: handler.createFood
    name: ${self:service}-createFood
    events:
      - http:
          path: foods
          method: post
          cors: true
  updateFood:
    handler: handler.updateFood
    name: ${self:service}-updateFood
    events:
      - http:
          path: foods/{id}
          method: put
          cors: true
  deleteFood:
    handler: handler.deleteFood
    name: ${self:service}-deleteFood
    events:
      - http:
          path: foods/{id}
          method: delete
          cors: true
  # Food Category
  getFoodCategories:
    handler: handler.getFoodCategories
    name: ${self:service}-getFoodCategories
    events:
      - http:
          path: food_categories
          method: get
          cors: true
  createFoodCategory:
    handler: handler.createFoodCategory
    name: ${self:service}-createFoodCategory
    events:
      - http:
          path: food_categories
          method: post
          cors: true
  updateFoodCategory:
    handler: handler.updateFoodCategory
    name: ${self:service}-updateFoodCategory
    events:
      - http:
          path: food_categories/{id}
          method: put
          cors: true
  deleteFoodCategory:
    handler: handler.deleteFoodCategory
    name: ${self:service}-deleteFoodCategory
    events:
      - http:
          path: food_categories/{id}
          method: delete
          cors: true
  # Shopping List
  getShoppingList:
    handler: handler.getShoppingList
    name: ${self:service}-getShoppingList
    events:
      - http:
          path: shopping_lists/{id}
          method: get
          cors: true
